{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/connections/list/": {
            "get": {
                "tags": [
                    "connections"
                ],
                "summary": "Fetch Available Connections",
                "operationId": "fetch_available_connections_connections_list__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectionResponseInstance"
                                    },
                                    "type": "array",
                                    "title": "Response Fetch Available Connections Connections List  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/connections/{connection_id}/": {
            "get": {
                "tags": [
                    "connections"
                ],
                "summary": "Read Connection",
                "operationId": "read_connection_connections__connection_id___get",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionResponseInstance"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/connections/": {
            "post": {
                "tags": [
                    "connections"
                ],
                "summary": "Create Connection",
                "operationId": "create_connection_connections__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequestInstance"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionResponseInstance"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Operation forbidden"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/connections/{connection_id}": {
            "put": {
                "tags": [
                    "connections"
                ],
                "summary": "Update Connection",
                "operationId": "update_connection_connections__connection_id__put",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequestInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionResponseInstance"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Operation forbidden"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "connections"
                ],
                "summary": "Delete Connection",
                "operationId": "delete_connection_connections__connection_id__delete",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "404": {
                        "description": "Connection not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/connections/{connection_id}/run": {
            "post": {
                "tags": [
                    "connections"
                ],
                "summary": "Connection Trigger Run",
                "operationId": "connection_trigger_run_connections__connection_id__run_post",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actors/{actor_type}/list": {
            "get": {
                "tags": [
                    "actors"
                ],
                "summary": "Fetch Available Actors",
                "operationId": "fetch_available_actors_actors__actor_type__list_get",
                "parameters": [
                    {
                        "name": "actor_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Actor Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {},
                                    "title": "Response Fetch Available Actors Actors  Actor Type  List Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actors/{actor_uuid}/specs": {
            "get": {
                "tags": [
                    "actors"
                ],
                "summary": "Get Actor Specs",
                "description": "Initialize actor obj from verified-actors repo and call spec() on it and return",
                "operationId": "get_actor_specs_actors__actor_uuid__specs_get",
                "parameters": [
                    {
                        "name": "actor_uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Actor Uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actor_instances/{actor_type}/list": {
            "get": {
                "tags": [
                    "actor_instances"
                ],
                "summary": "Fetch Available Actor Instances",
                "operationId": "fetch_available_actor_instances_actor_instances__actor_type__list_get",
                "parameters": [
                    {
                        "name": "actor_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Actor Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActorInstance-Output"
                                    },
                                    "title": "Response Fetch Available Actor Instances Actor Instances  Actor Type  List Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actor_instances/{actor_instance_uuid}": {
            "get": {
                "tags": [
                    "actor_instances"
                ],
                "summary": "Read Actor Instance",
                "operationId": "read_actor_instance_actor_instances__actor_instance_uuid__get",
                "parameters": [
                    {
                        "name": "actor_instance_uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Actor Instance Uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActorInstance-Output"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "actor_instances"
                ],
                "summary": "Update Actor Instance",
                "operationId": "update_actor_instance_actor_instances__actor_instance_uuid__put",
                "parameters": [
                    {
                        "name": "actor_instance_uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Actor Instance Uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_update_actor_instance_actor_instances__actor_instance_uuid__put"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActorInstance-Output"
                                    },
                                    "title": "Response Update Actor Instance Actor Instances  Actor Instance Uuid  Put"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Operation forbidden"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "actor_instances"
                ],
                "summary": "Delete Actor Instance",
                "operationId": "delete_actor_instance_actor_instances__actor_instance_uuid__delete",
                "parameters": [
                    {
                        "name": "actor_instance_uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Actor Instance Uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Delete Actor Instance Actor Instances  Actor Instance Uuid  Delete"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Operation forbidden"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actor_instances/": {
            "post": {
                "tags": [
                    "actor_instances"
                ],
                "summary": "Create Actor Instance",
                "operationId": "create_actor_instance_actor_instances__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActorInstance-Input"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActorInstance-Output"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Operation forbidden"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/actor_instances/{actor_instance_uuid}/discover": {
            "get": {
                "tags": [
                    "actor_instances"
                ],
                "summary": "Call Actor Instance Discover",
                "description": "Initialize actor obj from verified-actors repo and call discover() on it and return\n\ncurl -X 'GET'     'http://localhost:8000/actor_instances/c6713b9d-0b97-4903-8982-4c80132f4a21/discover'     -H 'accept: application/json'     -H 'Content-Type: application/json'",
                "operationId": "call_actor_instance_discover_actor_instances__actor_instance_uuid__discover_get",
                "parameters": [
                    {
                        "name": "actor_instance_uuid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Actor Instance Uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/connection-run-logs/": {
            "post": {
                "tags": [
                    "connection_run_logs"
                ],
                "summary": "Add Connection Run Log",
                "operationId": "add_connection_run_log_connection_run_logs__post",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DatLogMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DatLogMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "403": {
                        "description": "Operation forbidden"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/verify": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Verify User",
                "description": "Verify user credentials.\n\nParameters:\n- user (UserRequestModel): User request model containing email and password.\n- service (Users): Instance of the Users service.\n\nReturns:\n- dict or None: Dictionary containing user information if credentials are valid.",
                "operationId": "verify_user_users_verify_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequestModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/": {
            "post": {
                "summary": "Update Admin",
                "operationId": "update_admin_admin__post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Root",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ActorInstance-Input": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "title": "Uuid",
                        "default": "d565b077-029b-4cab-acdd-f2a5c2298cd3"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "workspace_id": {
                        "type": "string",
                        "title": "Workspace Id",
                        "default": "wkspc-uuid"
                    },
                    "actor_id": {
                        "type": "string",
                        "title": "Actor Id",
                        "default": "gdrive-uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id",
                        "default": "09922bd9-7872-4664-99d0-08eae42fb554"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/ConnectorSpecification"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "configuration"
                ],
                "title": "ActorInstance"
            },
            "ActorInstance-Output": {
                "properties": {
                    "uuid": {
                        "type": "string",
                        "title": "Uuid",
                        "default": "d565b077-029b-4cab-acdd-f2a5c2298cd3"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "workspace_id": {
                        "type": "string",
                        "title": "Workspace Id",
                        "default": "wkspc-uuid"
                    },
                    "actor_id": {
                        "type": "string",
                        "title": "Actor Id",
                        "default": "gdrive-uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id",
                        "default": "09922bd9-7872-4664-99d0-08eae42fb554"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/ConnectorSpecification"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "configuration"
                ],
                "title": "ActorInstance"
            },
            "Body_update_actor_instance_actor_instances__actor_instance_uuid__put": {
                "properties": {
                    "conn_spec": {
                        "$ref": "#/components/schemas/ConnectorSpecification"
                    },
                    "configured_document_stream": {
                        "$ref": "#/components/schemas/ConfiguredDocumentStream"
                    }
                },
                "type": "object",
                "required": [
                    "conn_spec",
                    "configured_document_stream"
                ],
                "title": "Body_update_actor_instance_actor_instances__actor_instance_uuid__put"
            },
            "ConfiguredDocumentStream": {
                "properties": {
                    "stream": {
                        "$ref": "#/components/schemas/DatDocumentStream"
                    },
                    "namespace": {
                        "type": "string",
                        "title": "Namespace",
                        "description": "namespace the data is associated with"
                    },
                    "sync_mode": {
                        "$ref": "#/components/schemas/SyncMode"
                    },
                    "destination_sync_mode": {
                        "$ref": "#/components/schemas/DestinationSyncMode"
                    },
                    "cursor_field": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cursor Field",
                        "description": "Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental`. Otherwise it is ignored."
                    },
                    "primary_key": {
                        "anyOf": [
                            {
                                "items": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Primary Key",
                        "description": "Paths to the fields that will be used as primary key. This field is REQUIRED if `destination_sync_mode` is `*_dedup`. Otherwise it is ignored."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "stream",
                    "namespace",
                    "sync_mode",
                    "destination_sync_mode"
                ],
                "title": "ConfiguredDocumentStream"
            },
            "ConnectionRequestInstance": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "source_instance_id": {
                        "type": "string",
                        "title": "Source Instance Id"
                    },
                    "generator_instance_id": {
                        "type": "string",
                        "title": "Generator Instance Id"
                    },
                    "destination_instance_id": {
                        "type": "string",
                        "title": "Destination Instance Id"
                    },
                    "configuration": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Configuration"
                    },
                    "catalog": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Catalog"
                    },
                    "cron_string": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cron String"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Status"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "source_instance_id",
                    "generator_instance_id",
                    "destination_instance_id"
                ],
                "title": "ConnectionRequestInstance"
            },
            "ConnectionResponseInstance": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "source_instance_id": {
                        "type": "string",
                        "title": "Source Instance Id"
                    },
                    "generator_instance_id": {
                        "type": "string",
                        "title": "Generator Instance Id"
                    },
                    "destination_instance_id": {
                        "type": "string",
                        "title": "Destination Instance Id"
                    },
                    "configuration": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Configuration"
                    },
                    "catalog": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Catalog"
                    },
                    "cron_string": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cron String"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "source_instance_id",
                    "generator_instance_id",
                    "destination_instance_id",
                    "status"
                ],
                "title": "ConnectionResponseInstance"
            },
            "ConnectorSpecification": {
                "properties": {
                    "protocol_version": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Protocol Version",
                        "description": "the Vectorize Protocol version supported by the connector. Protocol versioning uses SemVer."
                    },
                    "documentationUrl": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Documentationurl"
                    },
                    "changelogUrl": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Changelogurl"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the specific connector to which this ConnectorSpecification belongs."
                    },
                    "connectionSpecification": {
                        "type": "object",
                        "title": "Connectionspecification",
                        "description": "ConnectorDefinition specific blob. Must be a valid JSON string."
                    },
                    "supportsIncremental": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Supportsincremental",
                        "description": "If the connector supports incremental mode or not."
                    },
                    "supported_destination_sync_modes": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DestinationSyncMode"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Supported Destination Sync Modes",
                        "description": "List of destination sync modes supported by the connector"
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "name",
                    "connectionSpecification"
                ],
                "title": "ConnectorSpecification"
            },
            "DatDocumentStream": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "namespace": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Namespace",
                        "description": "namespace the data is associated with"
                    },
                    "json_schema": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Json Schema"
                    },
                    "dir_uris": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dir Uris"
                    },
                    "sync_mode": {
                        "$ref": "#/components/schemas/SyncMode"
                    },
                    "cursor_field": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cursor Field",
                        "description": "Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental`. Otherwise it is ignored."
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "name",
                    "sync_mode"
                ],
                "title": "DatDocumentStream"
            },
            "DatLogMessage": {
                "properties": {
                    "level": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Level"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "log level of the log message"
                    },
                    "message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Message",
                        "description": "log message"
                    },
                    "stack_trace": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stack Trace",
                        "description": "an optional stack trace if the log message corresponds to an exception"
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "title": "DatLogMessage"
            },
            "DestinationSyncMode": {
                "type": "string",
                "enum": [
                    "upsert",
                    "append",
                    "replace"
                ],
                "title": "DestinationSyncMode"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Level": {
                "type": "string",
                "enum": [
                    "FATAL",
                    "ERROR",
                    "WARN",
                    "INFO",
                    "DEBUG",
                    "TRACE"
                ],
                "title": "Level"
            },
            "SyncMode": {
                "type": "string",
                "enum": [
                    "full_refresh",
                    "incremental"
                ],
                "title": "SyncMode"
            },
            "UserRequestModel": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserRequestModel"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}